from constants import piece_score, piece_position_scores

def get_game_phase(gs):
    total_material = 0
    for row in range(8):
        for col in range(8):
            piece = gs.board[row][col]
            if piece != "--" and piece[1] != "K":
                total_material += piece_score[piece[1]]
    return total_material < 1500  # True nếu là tàn cuộc

def get_material_score(gs):
    white_score = 0
    black_score = 0
    for row in range(8):
        for col in range(8):
            piece = gs.board[row][col]
            if piece != "--":
                if piece[0] == "w":
                    white_score += piece_score[piece[1]]
                else:
                    black_score += piece_score[piece[1]]
    return black_score - white_score

def get_piece_position_score(gs, is_endgame):
    score = 0
    if is_endgame:
        piece_position_scores["wK"] = piece_position_scores["wK_end"]
        piece_position_scores["bK"] = piece_position_scores["bK_end"]
    else:
        piece_position_scores["wK"] = piece_position_scores["wK"]
        piece_position_scores["bK"] = piece_position_scores["bK"]

    for row in range(8):
        for col in range(8):
            piece = gs.board[row][col]
            if piece != "--":
                if piece[0] == "b":
                    score += piece_position_scores[piece][row][col]
                else:
                    score -= piece_position_scores[piece][row][col]
    return score

def evaluate_board(gs, ai_turn, is_endgame):
    score = get_piece_position_score(gs, is_endgame) + get_material_score(gs)
    return score if ai_turn == "b" else -score